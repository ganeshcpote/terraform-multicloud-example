def access_key=""
def secret_key=""
def data = ""
pipeline {
  agent any

  parameters {
        string(name: 'app_name', defaultValue: 'test1', description: 'Provide Application name to be deploy') 
		choice(name: 'app_environment', choices: ['dev', 'qa', 'pre-prod', 'prod'], description: 'Specify environment' )
		choice(name: 'aws_region', choices: ['us-east-1', 'us-east-2'], description: 'Specify aws region' )
		choice(name: 'instance_type', choices: ['t2.micro', 't2.medium'], description: 'Specify instance type' )
    }
  stages {
   stage('Preparations') {
      steps {
	script {
		withCredentials ([usernamePassword(credentialsId: 'aws_credentails', usernameVariable: 'aws_access_key', passwordVariable: 'aws_secret_key')]) {
		   access_key = aws_access_key
		   secret_key = aws_secret_key
		}
	}
	dir('aws') {
		script {
			data = "aws_access_key=\"${access_key}\"\n"
			data = data + "aws_secret_key=\"${secret_key}\"\n"
			data = data + "app_name=\"${app_name}\"\n"
			data = data + "app_environment=\"${app_environment}\"\n"
			data = data + "aws_region=\"${aws_region}\"\n"
			data = data + "instance_type=\"${instance_type}\"\n"
		}
	writeFile file: "${BUILD_ID}_terraform.tfvars", text: data
	sh "cat ${BUILD_ID}_terraform.tfvars"
      	  }
      }
    }
    stage('Terraform Init') {
      steps {
	dir('aws') {  
		sh "terraform init -backend-config=\"conn_str=postgres://jenkins:jenkins@localhost/terraformstate?sslmode=disable\""
		//sh "terraform init  -input=false -backend-config=\"bucket=jenkins\" -backend-config=\"access_key=${access_key}\" -backend-config=\"secret_key=${secret_key}\" -backend-config=\"region=${aws_region}\" -backend-config=\"key=tf-state/${BUILD_ID}_terraform.tfstate\""
		//sh "terraform workspace new ${BUILD_ID}-state"
		//sh "terraform workspace select  ${BUILD_ID}-state"
		//sh "terraform workspace show"        	
	  }
       }
    }
    stage('Terraform Plan') {
      steps {
	dir('aws') {   
        	sh "terraform plan -out=tfplan -var-file=${BUILD_ID}_terraform.tfvars -backend-config=\"conn_str=postgres://jenkins:jenkins@localhost/terraformstate?sslmode=disable\""
        	sh "terraform show -no-color tfplan -backend-config=\"conn_str=postgres://jenkins:jenkins@localhost/terraformstate?sslmode=disable\"" > ${BUILD_ID}_tfplan.txt"
	}
      }
    }
  }
  post {
        always {
		dir('aws') { 
            archiveArtifacts artifacts: "${BUILD_ID}_tfplan.txt"
			cleanWs()
		}
        }
    }
}
